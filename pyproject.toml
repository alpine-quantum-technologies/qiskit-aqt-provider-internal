[tool.poetry]
name = "qiskit-aqt-provider-internal"
version = "0.9.0"
description = "Qiskit provider for internal AQT backends"
authors = ["Qiskit Development Team"]
readme = "README.md"
license = "Apache 2.0"
classifiers=[
        "License :: OSI Approved :: Apache Software License",
        "Intended Audience :: Developers",
        "Intended Audience :: Science/Research",
        "Operating System :: Microsoft :: Windows",
        "Operating System :: MacOS",
        "Operating System :: POSIX :: Linux",
        "Programming Language :: Python :: 3 :: Only",
        "Programming Language :: Python :: 3.8",
        "Programming Language :: Python :: 3.9",
        "Programming Language :: Python :: 3.10",
        "Programming Language :: Python :: 3.11",
        "Topic :: Scientific/Engineering",
    ]
keywords=["qiskit", "sdk", "quantum"]

packages = [
    { include = "qiskit_aqt_provider" },
    { include = "test", format = "sdist" }
]
include = [
    "CODE_OF_CONDUCT.md",
    "CONTRIBUTING.md",
    "LICENSE.txt",
    "MANIFEST.in",
    "README.md"
]

[tool.poetry.plugins."qiskit.transpiler.scheduling"]
aqt = "qiskit_aqt_provider.transpiler_plugin:AQTSchedulingPlugin"

[tool.poetry.plugins."qiskit.transpiler.translation"]
aqt = "qiskit_aqt_provider.transpiler_plugin:AQTTranslationPlugin"

[tool.poetry.plugins.pytest11]
pytest_qiskit_aqt = "qiskit_aqt_provider.test.fixtures"

[tool.poetry.dependencies]
python = "^3.8"

python-dotenv = ">=1"
qiskit-aer = ">=0.11"
qiskit-terra = ">=0.23.3"
requests = ">=2"
tabulate = ">=0.9.0"
tweedledum = { version = ">=1", optional = true }
typing-extensions = ">=4.0.0"

[tool.poetry.group.dev.dependencies]
black = "^23.1.0"
coverage = "^7.2.1"
dirty-equals = "^0.5.0"
hypothesis = "^6.70.0"
ipykernel = "^6.22.0"
isort = "^5.12.0"
jupyter-sphinx = "^0.4.0"
mistletoe = "^1.0.1"
mypy = "=1.0.1"
poethepoet = "^0.18.1"
pre-commit = "^3.1.1"
pylint = "2.16.*"
pytest = ">=7"
pytest-sugar = "^0.9.6"
qiskit-experiments = "^0.4.0"
qiskit-sphinx-theme = ">=1.7.0"
qiskit-terra = {version = ">=0.23.2", extras = ["visualization"]}
sphinx = ">=5.3"
sympy = "^1.11.1"
typer = "^0.7.0"
types-requests = "^2.28.11"
types-setuptools = "^65.7.0"
types-tabulate = "^0.9.0.1"

[tool.poetry.extras]
examples = [
    "tweedledum"
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py37', 'py38', 'py39', 'py310']
preview = true  # don't use implicit string concatenation

[tool.isort]
profile = "black"

[tool.pyright]
typeCheckingMode = "basic"
analyzeUnannotatedFunctions = false
reportMissingImports = false
reportMissingTypeStubs = false
reportImportCycles = false

reportDuplicateImport = "error"

pythonVersion = "3.8"
pythonPlatform = "Linux"

[tool.pylint.BASIC]
good-names = [
    "qc",  # quantum circuit
    "qr",  # quantum register
    "q0",  # qubit 0
    "q1",  # qubit 1
    "i",  # index
    "k",  # index
    "f",  # function
    "g",  # function
    "x",  # mathematic function argument
    "y",  # mathematic function argument
    "z",  # mathematic function argument
]

[tool.pylint."MESSAGES CONTROL"]
disable = [
    "fixme",  # don't show FIXME and TODO notes as linter warnings
    "typecheck",  # mypy
    "format",  # black
    "line-too-long",  # black
    "missing-docstring",  # too verbose at the moment
    "too-few-public-methods",
    "duplicate-code",  # too verbose
    "wrong-import-order",  # isort
    "ungrouped-imports",  # isort
    "protected-access",  # too annoying
]

[tool.pylint."REPORTS"]
# enabling reports causes the runtime to double
# see https://github.com/PyCQA/pylint/issues/3443
reports = false
score = false

[tool.coverage.report]
fail_under = 93

[tool.poe.tasks.test]
shell = """
coverage run ${cov_opts} -m pytest
coverage report
"""

[[tool.poe.tasks.test.args]]
name = "cov_opts"
default = ""

[tool.poe.tasks]
pylint = "pylint qiskit_aqt_provider test"
mypy = "mypy ."
isort = "isort ."
isort_check = "isort --check ."
black = "black ."
black_check = "black --check ."
lint = ["mypy", "pylint"]
format = ["isort", "black"]
format_check = ["isort_check", "black_check"]
docs = "sphinx-build -b html -W docs docs/_build"
all = ["test", "lint", "docs"]
